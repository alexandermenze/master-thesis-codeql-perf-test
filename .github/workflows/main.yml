name: Monitor CodeQL Query Performance

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'GitHub repo to analyze (owner/repo)'
        required: true
        default: 'octocat/Hello-World'
      ref:
        description: 'Branch, Tag or SHA to checkout'
        required: false
        default: 'main'
      sln-folder:
        description: 'Ordnerpfad, in dem sich die .sln-Datei befindet'
        required: false
        default: '.'

jobs:
  monitor:
    runs-on: ubuntu-latest
    env:
      REPO_INPUT: ${{ github.event.inputs.repository }}
    steps:
      - name: Checkout workflow repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout external repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
          path: target-repo
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Set up Python & install psrecord
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: |
          python -m pip install --upgrade pip
          pip install psrecord

      - name: Download and extract CodeQL
        run: |
          CODEQL_VERSION="2.21.2"
          PLATFORM="linux64"
          ARCHIVE="codeql-bundle.tar.gz"
          DOWNLOAD_URL="https://github.com/github/codeql-action/releases/download/codeql-bundle-v2.21.2/codeql-bundle-linux64.tar.gz"
          echo "Downloading CodeQL from $DOWNLOAD_URL"
          curl -L "$DOWNLOAD_URL" -o "$ARCHIVE"
          mkdir codeql
          tar -xzf "$ARCHIVE" -C codeql --strip-components=1
          echo "Adding CodeQL binary directory to PATH: $PWD/codeql"
          echo "$PWD/codeql" >> $GITHUB_PATH

      - name: Install cloc
        run: |
          sudo apt-get update
          sudo apt-get install -y cloc

      - name: Prepare repository name
        run: |
          echo "REPO_NAME=${REPO_INPUT//\//-}" >> $GITHUB_ENV

      - name: Run cloc for C# files
        run: |
          cloc target-repo --include-lang="C#" --exclude-dir=bin,obj --json --out="${REPO_NAME}.cloc.json"

      - name: Upload cloc results
        uses: actions/upload-artifact@v4
        with:
          name: results-cloc-${{ env.REPO_NAME }}
          path: ${{ env.REPO_NAME }}.cloc.json

      - name: Run CodeQL script under psrecord
        run: |
          SCRIPT=./run-analysis.sh
          QUERY_FILE="identify-call-paths.ql"
          RESULTS_FILE="${REPO_NAME}.results.csv"
          LOG_FILE="${REPO_NAME}.psrecord.log"
          OUTPUT_FILE="${REPO_NAME}.output.log"
          SLN_PATH="target-repo/${{ github.event.inputs.sln-folder }}"

          chmod +x $SCRIPT

          psrecord "$SCRIPT -s $SLN_PATH -d db -q identify-call-paths.ql -c $RESULTS_FILE" \
            --include-children \
            --log "$LOG_FILE" \
            2>&1 | tee $OUTPUT_FILE

      - name: Upload results csv
        uses: actions/upload-artifact@v4
        with:
          name: results-csv-${{ env.REPO_NAME }}
          path: ${{ env.REPO_NAME }}.results.csv
      
      - name: Upload resource usage log
        uses: actions/upload-artifact@v4
        with:
          name: psrecord-log-${{ env.REPO_NAME }}
          path: ${{ env.REPO_NAME }}.psrecord.log

      - name: Upload script output log
        uses: actions/upload-artifact@v4
        with:
          name: codeql-output-${{ env.REPO_NAME }}
          path: ${{ env.REPO_NAME }}.output.log

  build-monitor:
    runs-on: ubuntu-latest
    env:
      REPO_INPUT: ${{ github.event.inputs.repository }}
    steps:
      - name: Checkout workflow repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout external repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
          path: target-repo
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Set up Python & install psrecord
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: |
          python -m pip install --upgrade pip
          pip install psrecord

      - name: Prepare repository name
        run: echo "REPO_NAME=${REPO_INPUT//\//-}" >> $GITHUB_ENV

      - name: Run build-analysis script under psrecord
        run: |
          SCRIPT=./run-analysis-build.sh
          BUILD_LOG_FILE="${REPO_NAME}.build-psrecord.log"
          BUILD_OUTPUT="${REPO_NAME}.build-output.log"
          SLN_PATH="target-repo/${{ github.event.inputs.sln-folder }}"

          chmod +x $SCRIPT

          psrecord "$SCRIPT -s $SLN_PATH" \
            --include-children \
            --log "$BUILD_LOG_FILE" \
            2>&1 | tee $BUILD_OUTPUT

      - name: Upload build resource usage log
        uses: actions/upload-artifact@v4
        with:
          name: build-psrecord-log-${{ env.REPO_NAME }}
          path: ${{ env.REPO_NAME }}.build-psrecord.log

      - name: Upload build script output log
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ env.REPO_NAME }}
          path: ${{ env.REPO_NAME }}.build-output.log
